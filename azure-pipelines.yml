# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml 

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- task: PowerShell@2
  displayName: 'Download >> GitHub IoT-Packages <<'
  inputs:
    targetType: 'inline'
    script: |
      $latestRelease = Invoke-WebRequest https://api.github.com/repos/Azure/azure-iotedge/releases/latest -Headers @{"Accept"="application/json"}
      $json = $latestRelease.Content | ConvertFrom-Json

      write-host 'latest version:' $json.tag_name

      $files = $json.assets | % browser_download_url

      write-host 'Assets count:' $files.length

      $DestinationPath = $env:SYSTEM_ARTIFACTSDIRECTORY

      foreach ($file in $files) {
        $fileDestination = Join-Path $DestinationPath (Split-Path $file -Leaf)

        try {
            Invoke-WebRequest -Uri $file -OutFile $fileDestination -ErrorAction Stop -Verbose
            "Grabbed '$($file)' to '$fileDestination'"
        } catch {
            throw "Unable to download '$($file)'"
        }
      }

- task: PublishBuildArtifacts@1
  displayName: 'Publish >> IoT-Packages <<'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
